# Google search - 1
# На вход программе подается натуральное число n, затем n строк, затем еще одна строка — поисковый запрос.
# Напишите программу, которая выводит все введенные строки, в которых встречается поисковый запрос.
n = int(input())
list = []
for i in range (1, n+1):
    list.append(input())
substr = input()

for i in range(len(list)):
    if list[i].lower().find(substr.lower()) != -1:
        print(list[i])

# На вход программе подается натуральное число n, затем n строк, затем число k — количество поисковых запросов, затем
# k строк — поисковые запросы. Напишите программу, которая выводит все введенные строки,
# в которых встречаются все поисковые запросы.

n = int(input())
list = []
for i in range (1, n+1):
    list.append(input())
k = int(input())
find_list = []
for i in range (1, k+1):
    find_list.append(input())
finds = []
for i in range(len(list)):
    for j in range(len(find_list)):
        flag = 0
        if list[i].lower().find(find_list[j].lower()) == -1:
            flag = 1
            break
    if list[i] not in finds and flag ==0:
        finds.append(list[i])
print(*finds, sep = '\n')

# На вход программе подается натуральное число n, а затем n целых чисел. Напишите программу, которая сначала выводит все отрицательные числа,
# затем нули, а затем все положительные числа, каждое на отдельной строке. Числа должны быть выведены в том же порядке, в котором они были введены.
n = int(input())
negatives = []
zeros = []
positives = []
for i in range (1, n+1):
    a = int(input())
    if a < 0:
        negatives.append(a)
    elif a == 0:
        zeros.append(a)
    else:
        positives.append(a)
print(*negatives, sep = '\n')
print(*zeros, sep = '\n')
print(*positives, sep = '\n')

# На вход программе подается строка текста. Напишите программу, которая выводит слова введенной строки в столбик
# s = input()
print(*input().split(), sep = '\n')

# На вход программе подается строка текста, содержащая имя, отчество и фамилию человека. Напишите программу, которая выводит инициалы человека.
s = input()
list = s.split()
result = ''
for i in range(len(list)):
    result += list[i][0] + '.'
print(result)

# В операционной системе Windows полное имя файла состоит из буквы диска, после которого ставится двоеточие и символ  "\",
# затем через такой же символ перечисляются подкаталоги (папки), в которых находится файл, в конце пишется имя файла (C:\Windows\System32\calc.exe).
# На вход программе подается одна строка с корректным именем файла в операционной системе Windows. Напишите программу, которая разбирает строку на части,
# разделенные символом "\". Каждую часть вывести в отдельной строке.
s = input()
print(*s.split("\\"), sep = '\n')

# На вход программе подается строка текста, содержащая целые числа. Напишите программу, которая по заданным числам строит столбчатую диаграмму.
s = input()
list = s.split()
for i in range(len(list)):
    print('+' * int(list[i]))

# На вход программе подается строка текста, содержащая 4 целых числа разделенных точкой. Напишите программу, которая определяет является ли введенная строка текста корректным ip-адресом.
ip_list = input().split('.')
flag = 0
if len(ip_list) != 4:
    print('НЕТ')
    break
for i in range(len(ip_list)):
    if ip_list[i] > 255 or ip_list[i] < 0:
        flag = 1
        break
if flag == 1:
    print('НЕТ')
else:
    print('ДА')

# На вход программе подается строка текста, содержащая натуральные числа. Из данной строки формируется список чисел.
# Напишите программу, которая подсчитывает, сколько в полученном списке пар элементов, равных друг другу. Считается, что любые два элемента,
# равные друг другу образуют одну пару, которую необходимо посчитать.

s = input().split()
count = 0
for i in range (len(s)):
    for j in range(i+1, len(s)):
        if s[i] == s[j]:
            count +=1
print(count)
